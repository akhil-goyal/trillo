/*
COLORS

Primary: #eb2f64
Primary light: #FF3366
Primary dark: #BA265D

Grey light 1: #faf9f9
Grey light 2: #f4f2f2
Grey light 3: #f0eeee
Grey light 4: #ccc

Grey dark 1: #333
Grey dark 2: #777
Grey dark 3: #999

*/
/* CSS (NOT SASS) variables */
:root {
  --color-primary: #006494;
  --color-primary-light: #247ba0;
  --color-primary-dark: #13293d;
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;
  --color-grey-dark-1: #333;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;
  --box-shadow-dark: 0 2rem 6rem rgba(0,0,0,0.3); }

/* global reset */
* {
  margin: 0;
  padding: 0; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  /* global font size */
  font-size: 62.5%; }

body {
  background-color: var(--color-primary);
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  line-height: 1.6;
  background-image: linear-gradient(to bottom, var(--color-primary-light), var(--color-primary-dark));
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh; }

.container {
  /* 
        The container can decrease if there is not enough space to display our max-width.
        It simply occupies 100% of the viewport width if there is not space for 120rem/1200pixels.
    */
  max-width: 120rem;
  margin: 8rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: 10px 10px 0px var(--color-primary-dark);
  min-height: 50rem; }

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--color-grey-light-2); }

.content {
  /* 
        This is our flex container.
    */
  display: flex; }

.sidebar {
  background-color: var(--color-grey-dark-1);
  /* 
        Define the sidebar width. The flex property for width is flex-basis.

        But we are using the shorthand flex property.

        0 - don't grow if there's extra space
        0 - don't shrink if there's not enough space 
        18% - sidebar space (width)
    */
  flex: 0 0 18%; }

.main-view {
  background-color: olivedrab;
  flex: 1; }

.logo {
  height: 3.25rem;
  margin-left: 3rem; }

.search {
  flex: 0 0 40%;
  display: flex;
  align-items: center;
  justify-content: center;
  /* 
        They are siblings in the HTML, so we can use the adjacent selector
    */ }
  .search__input {
    /* 
            The input element doesn't inherit the font family and size and color of the global element.
        */
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    border-radius: 100px;
    padding: 1rem;
    width: 90%;
    transition: all .2s;
    /* 
            Move the magnifying glass on top of the input
        */
    margin-right: -3rem; }
    .search__input:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3); }
    .search__input::-webkit-input-placeholder {
      font-weight: 100;
      font-size: 1.2rem; }
      .search__input::-webkit-input-placeholder:focus {
        font-size: 1.9rem; }
  .search__input:focus + .search__button {
    background-color: var(--color-grey-light-3); }
  .search__button {
    border: none;
    background-color: var(--color-grey-light-2);
    position: relative; }
    .search__button:focus {
      outline: none; }
    .search__button:active {
      transform: translateY(5px); }
  .search__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-primary-light); }

.user-navigation {
  display: flex;
  flex-direction: row; }
  .user-navigation__icon {
    height: 2.5rem;
    width: 2.5rem; }
  .user-navigation__user-img {
    height: 3.5rem;
    width: 3.5rem;
    border-radius: 50%; }
