.page-top {
    display: flex;
    align-items: center;
    justify-content: center;
    /* 
        The container can decrease if there is not enough space to display our max-width.
        It simply occupies 100% of the viewport width if there is not space for 120rem/1200pixels.
    */
    max-width: 120rem;
    margin: 8rem auto;

    // for testing
    min-height: 10rem;
    text-align: center;
    border-radius: 10px;
    color: var(--color-grey-light-1);

    & > h1 {
        display: inline-block;
        text-transform: uppercase;
        text-align: center;
        padding-top: 1rem;
        font-size: 7rem;
        font-weight: 900;
        letter-spacing: -.5rem;

        box-shadow: inset 0 -45px 0 var(--hover-color);
        text-shadow: 6px 6px 0px rgba(0,0,0,0.2);
        padding-right: 1rem;
    }
}

.container {
    /* 
        The container can decrease if there is not enough space to display our max-width.
        It simply occupies 100% of the viewport width if there is not space for 120rem/1200pixels.
    */
    max-width: 120rem;
    margin: 8rem auto;
    background-color: var(--color-container);
    box-shadow: 0px 0px 50px 0px var(--color-primary-dark);
    color: var(--color-grey-light-1);

    // for testing
    min-height: 50rem;
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    height: 7rem;
    background-color: #fff;
    border-bottom: var(--color-grey-light-2);
}

.content {
    /* 
        This is our flex container.
    */
    display: flex;
}

.sidebar {
    display: flex;
    background-color: var(--color-primary-dark);

    /* 
        Define the sidebar width. The flex property for width is flex-basis.

        But we are using the shorthand flex property.

        0 - don't grow if there's extra space
        0 - don't shrink if there's not enough space 
        18% - sidebar space (width)
    */
    flex: 0 0 18%;
    flex-direction: column;
    justify-content: space-between;
}

.main-view {
    flex: 1;

    height: 50rem;
}