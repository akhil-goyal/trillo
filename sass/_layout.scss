.page-top {
    display: flex;
    align-items: center;
    justify-content: center;
    /* 
        The container can decrease if there is not enough space to display our max-width.
        It simply occupies 100% of the viewport width if there is not space for 120rem/1200pixels.
    */
    max-width: 120rem;
    margin: 8rem auto;

    text-align: center;
    border-radius: 10px;
    color: var(--color-grey-light-1);

    & > h1 {
        display: inline-block;
        text-transform: uppercase;
        text-align: center;
        padding: 1.5rem;
        font-size: 7rem;
        font-weight: 900;
        letter-spacing: -.5rem;

        background-image: linear-gradient(120deg, var(--hover-color) 0%, var(--hover-color) 100%);
        background-repeat: no-repeat;
        background-size: 100% 0.5em;
        background-position: 0 88%;
        transition: background-size 0.25s ease-in;
        transition: all .5s;

        &:hover {
            background-size: 100% 90%;
            border-radius: 5px;
            transform: skewX(-10deg)
        }
        
        text-shadow: 6px 6px 0px rgba(0,0,0,0.2);
    }
}

.container {
    /* 
        The container can decrease if there is not enough space to display our max-width.
        It simply occupies 100% of the viewport width if there is not space for 120rem/1200pixels.
    */
    max-width: 120rem;
    margin: 8rem auto;
    background-color: var(--color-container);
    //box-shadow: 0px 0px 50px 0px var(--color-primary-dark);
    box-shadow: 15px 15px 0px var(--color-primary-dark);
    color: var(--color-grey-light-1);

    @media only screen and (max-width: $breakpoint-largest) {
        margin: 0;
        max-width: 100%;
        width: 100%;
    }
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    height: 7rem;
    background-color: #fff;
    border-bottom: var(--color-grey-light-2);
}

.content {
    /* 
        This is our flex container.
    */
    display: flex;

    @media only screen and (max-width: $breakpoint-medium) {
        flex-direction: column;
    }
}

.sidebar {
    display: flex;
    background-color: var(--color-primary-dark);

    /* 
        Define the sidebar width. The flex property for width is flex-basis.

        But we are using the shorthand flex property.

        0 - don't grow if there's extra space
        0 - don't shrink if there's not enough space 
        18% - sidebar space (width)
    */
    flex: 0 0 18%;
    flex-direction: column;
    justify-content: space-between;
}

.main-view {
    flex: 1;

    color: var(--color-primary-dark);
}

.detail {
    display: flex;
    padding: 5rem;

    background-color: var(--color-grey-light-3);
    border-bottom: 1px solid var(--color-grey-light-4);
}

.experience {
    font-size: 1.4rem;
    flex: 0 0 60%;
    margin-right: 5rem;
    padding: 3rem;
    color: var(--color-grey-light-1);

    background-color: var(--color-container-2);
    box-shadow: .5rem .4rem 0 rgba(0,0,0,.5);
}

.skills {
    flex: 1;

    &__block {
        font-size: 1.4rem;
        padding: 3rem;
        color: var(--color-grey-light-1);

        background-color: var(--color-container-2);
        box-shadow: .5rem .4rem 0 rgba(0,0,0,.5);

        &:not(:last-child) {
            margin-bottom: 3rem;
        }
    }
}